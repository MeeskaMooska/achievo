generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Today chat Models
model Post {
  id           Int      @id @default(autoincrement())
  title        String
  content      String
  authorId     Int
  published_at DateTime @default(now())

  @@index([authorId])
}

model Token {
  id                 Int    @id @default(autoincrement())
  associated_user_id Int    @unique
  jwt_token          String @unique @db.VarChar(500)
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  password     String
  email        String   @unique
  first_name   String?
  last_initial String?
  bio          String?
  member_since DateTime @default(now())
}

// ToDo Models
model AchievoUser {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  email        String        @unique
  member_since DateTime      @default(now())
  email_valid  Boolean       @default(false)
  lists        AchievoList[]
}

model AchievoToken {
  id                 Int    @id @default(autoincrement())
  jwt_token          String @unique @db.VarChar(500)
  associated_user_id Int    @unique
}

model AchievoList {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  item        AchievoItem[]
  user        AchievoUser   @relation(fields: [user_id], references: [id])
  user_id     Int
  @@index([user_id])
}

model AchievoItem {
  id          Int         @id @default(autoincrement())
  section     Int
  label       String
  completed   Boolean     @default(false)
  list_id     Int
  list        AchievoList @relation(fields: [list_id], references: [id])
  @@index([list_id])
}

model AchievoEmailExtension {
  id          Int         @id @default(autoincrement())
  extension   String      @unique
  email       String      @unique
  user_id     Int
}